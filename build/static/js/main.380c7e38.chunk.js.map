{"version":3,"sources":["quotes/index.js","App.js","index.js"],"names":["quotesList","quotes","author","randomQuote","authorIndex","randomInt","length","q","quoteIndex","text","max","Math","floor","random","App","useState","time","DateTime","local","quote","state","setState","id","style","backgroundSize","height","className","onClick","toFormat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"m7/SAIMA,G,MAAa,CACjB,CACEC,O,KACAC,OAAQ,sBAEV,CACED,O,KACAC,OAAQ,gBAEV,CACED,O,KACAC,OAAQ,wBAGL,SAASC,IACd,IAAMC,EAAcC,EAAUL,EAAWM,QACnCC,EAAIP,EAAWI,GACfI,EAAaH,EAAUE,EAAEN,OAAOK,QACtC,MAAO,CACLG,KAAMF,EAAEN,OAAOO,GACfN,OAAQK,EAAEL,QAGd,SAASG,EAAUK,GACjB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWH,G,WCarBI,MApCf,WAAgB,IAAD,EACaC,mBAAS,CACjCC,KAAMC,WAASC,QACfC,MAAOhB,MAHI,mBACNiB,EADM,KACCC,EADD,KAgBb,OACE,qBAAKC,GAAG,QAAQC,MAXT,CAELC,eAAgB,QAChBC,OAAQ,SAQV,SACE,sBAAKC,UAAU,aAAf,UACE,sBAAKA,UAAU,WAAf,UACE,mBAAGA,UAAU,aAAaC,QARlC,WACEN,EAAS,2BAAID,GAAL,IAAYD,MAAOhB,QAOrB,SACGiB,EAAMD,MAAMV,OAEf,oBAAGiB,UAAU,eAAb,gBAAgCN,EAAMD,MAAMjB,aAE9C,qBAAKwB,UAAU,eAAf,SACA,sBAAKA,UAAU,YAAf,UACI,sBAAMJ,GAAG,OAAT,SAAiBF,EAAMJ,KAAKY,SAAS,YACrC,sBAAMN,GAAG,OAAT,SAAiBF,EAAMJ,KAAKY,SAAS,kBC5BjDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.380c7e38.chunk.js","sourcesContent":["import yimingQuotes from \"./yiming.json\";\nimport wangxingQuotes from \"./wangxing.json\";\nimport bezos from \"./bezos.json\";\n\nconst quotesList = [\n  {\n    quotes: yimingQuotes,\n    author: \"张一鸣\",\n  },\n  {\n    quotes: wangxingQuotes,\n    author: \"王兴\",\n  },\n  {\n    quotes: bezos,\n    author: \"贝佐斯\",\n  },\n];\nexport function randomQuote() {\n  const authorIndex = randomInt(quotesList.length);\n  const q = quotesList[authorIndex];\n  const quoteIndex = randomInt(q.quotes.length);\n  return {\n    text: q.quotes[quoteIndex],\n    author: q.author\n  };\n}\nfunction randomInt(max) {\n  return Math.floor(Math.random() * max);\n}","import { DateTime } from 'luxon';\nimport './App.css';\nimport { useState } from 'react';\nimport { randomQuote } from './quotes/index';\n\nfunction App() {\n  const [state, setState] = useState({\n    time: DateTime.local(),\n    quote: randomQuote(),\n  });\n  function getBGStyle() {\n    return {\n      // backgroundImage: `url(https://source.unsplash.com/random/2560x1600)`,\n      backgroundSize: 'cover',\n      height: '100vh'\n    }\n  }\n  function onQuoteClick() {\n    setState({...state, quote: randomQuote()})\n  }\n\n  return (\n    <div id=\"cover\" style={getBGStyle()}>\n      <div className=\"bg-wrapper\">\n        <div className=\"centered\">\n          <p className=\"quote-text\" onClick={onQuoteClick}>\n            {state.quote.text}\n          </p>\n          <p className=\"quote-author\">by {state.quote.author}</p>\n        </div>\n        <div className=\"bottom-right\">\n        <div className=\"time-text\">\n            <span id=\"time\">{state.time.toFormat(\"h':'mm\")}</span>\n            <span id=\"ampm\">{state.time.toFormat('a')}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}